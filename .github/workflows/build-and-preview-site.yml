name: Build and Preview Site
on:
  pull_request:
        branches: [master]
        types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - name: Install PostCSS
        run: |
          npm install -g postcss postcss-cli
          if [ -f "package.json" ]; then
            npm install
          fi

      - name: Build with Hugo
        run: |
          hugo mod clean
          hugo mod get -u
          hugo \
            --minify \
            --gc \
            --cleanDestinationDir \
            --ignoreVendorPaths "github.com/google/docsy"

      - name: Install Netlify CLI
        run: npm install -g netlify-cli

      - name: Deploy to Netlify
        id: netlify
        run: |
          # Authenticate with Netlify
          netlify deploy --prod --dir=public --site ${{ secrets.NETLIFY_SITE_ID }} --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} --json > deploy-output.json
          
          # Extract deploy URL
          DEPLOY_ID=$(jq -r '.deploy_id' deploy-output.json)
          DEPLOY_URL=$(jq -r '.deploy_url' deploy-output.json)
          
          echo "deploy_id=$DEPLOY_ID" >> $GITHUB_OUTPUT
          echo "deploy_url=$DEPLOY_URL" >> $GITHUB_OUTPUT

      - name: Comment on PR with preview link
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              const { data: comment } = await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `ðŸš€ Preview deployment ready! [View site](${{ steps.netlify.outputs.deploy_url }})`
              });
              console.log('Comment posted successfully');
            } catch (error) {
              console.error('Error posting comment:', error.message);
              // Fail gracefully - don't fail the whole workflow
              core.setFailed('Failed to post comment, but continuing workflow');
            }